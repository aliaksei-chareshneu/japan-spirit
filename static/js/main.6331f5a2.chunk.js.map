{"version":3,"sources":["components/HieroglyphBox.js","general-functions.js","components/App.js","index.js"],"names":["HieroglyphBox","useState","hieroglyphEntry","setHieroglyphEntry","backgroundImageUrl","setBackgroundImageUrl","loadNewHieroglyphEntry","Promise","resolve","console","log","fetch","then","r","json","data","min","max","length","Math","ceil","floor","random","loadNewBackgroundImage","url","loadingWrapper","all","overlay","document","getElementById","addEventListener","onAnimationEndCallback","removeEventListener","classList","remove","add","values","style","opacity","querySelectorAll","forEach","b","blur","useEffect","onanimationstart","e","animationName","onanimationend","id","className","backgroundImage","Container","fluid","maxWidth","Row","Col","lang","kanji","heisig_en","onClick","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.6331f5a2.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { getRandomInt } from '../general-functions'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\n// import dict from '../../node_modules/japanese-json/kana.json'\r\n\r\nconst HieroglyphBox = () => {\r\n    const [hieroglyphEntry, setHieroglyphEntry] = useState(null)\r\n    const [backgroundImageUrl, setBackgroundImageUrl] = useState(null)\r\n    // const [tempHieroglyph, setTempHieroglyph] = useState(null)\r\n\r\n    const showHint = () => {\r\n        document.getElementById(\"hint\").style.opacity = \"1\"\r\n    }\r\n\r\n    const hideHint = () => {\r\n        document.getElementById(\"hint\").style.opacity = \"0\"\r\n    }\r\n\r\n    const blurButtons = () => {\r\n        [...document.querySelectorAll('button')].forEach(b => b.blur())\r\n    }\r\n\r\n    const fadeInAnimation = () => {\r\n        return new Promise((resolve) => {\r\n            const overlay = document.getElementById(\"overlay\");\r\n            const onAnimationEndCallback = () => {\r\n                overlay.removeEventListener('animationend', onAnimationEndCallback);\r\n                resolve(\"Animation ended, callback function removed\");\r\n            }\r\n\r\n            overlay.addEventListener('animationend', onAnimationEndCallback)\r\n            overlay.classList.remove(\"fadeout\")\r\n            overlay.classList.add(\"fadein\")\r\n        })\r\n    }\r\n\r\n    const loadNewHieroglyphEntry = () => {\r\n        return new Promise((resolve) => {\r\n            console.log(\"Hieroglyph is being fetched...\")\r\n            fetch(\"https://kanjiapi.dev/v1/kanji/grade-1\")\r\n                .then(r => r.json())\r\n                .then(data => {\r\n                    fetch(\"https://kanjiapi.dev/v1/kanji/\" + data[getRandomInt(1, data.length)])\r\n                        .then(r => r.json())\r\n                        .then(data => {\r\n                            // setTempHieroglyph(data)\r\n                            console.log(data)\r\n                            resolve(data)\r\n                        })\r\n                })\r\n        })\r\n    }\r\n\r\n    const loadNewBackgroundImage = () => {\r\n        return new Promise((resolve) => {\r\n            console.log(\"Image is being fetched...\")\r\n            fetch(\"https://source.unsplash.com/collection/1252289\")\r\n                .then(r => {\r\n                    // setBackgroundImageUrl(r.url)\r\n                    console.log(r.url)\r\n                    resolve(r.url)\r\n                })\r\n        }) \r\n    }\r\n\r\n    const loadingWrapper = () => {\r\n        // return Promise.all or just Promise.all?\r\n        return Promise.all([fadeInAnimation(), loadNewHieroglyphEntry(), loadNewBackgroundImage()]).then((values) => {\r\n            hideHint()\r\n            blurButtons()\r\n            console.log(values);\r\n            setHieroglyphEntry(values[1])\r\n            setBackgroundImageUrl(values[2])\r\n            document.getElementById(\"overlay\").classList.remove(\"fadein\")\r\n            document.getElementById(\"overlay\").classList.add(\"fadeout\")\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        Promise.all([loadNewHieroglyphEntry(), loadNewBackgroundImage()]).then((values) => {\r\n            console.log(values)\r\n            setHieroglyphEntry(values[0])\r\n            setBackgroundImageUrl(values[1])\r\n            document.getElementById(\"overlay\").classList.remove(\"fadein\")\r\n            document.getElementById(\"overlay\").classList.add(\"fadeout\")\r\n        })\r\n\r\n        // loadingWrapper()\r\n\r\n        // loadNewHieroglyphEntry()\r\n        // loadNewBackgroundImage()\r\n\r\n        const overlay = document.getElementById(\"overlay\")\r\n        overlay.onanimationstart = (e) => {\r\n            console.log(`Start of ${e.animationName} animation`)\r\n            // return new Promise(resolve => resolve(`Start of ${e.animationName} animation`))\r\n        }\r\n\r\n        overlay.onanimationend = (e) => {\r\n            // return new Promise(resolve => resolve(`End of ${e.animationName} animation`))\r\n            console.log(`End of ${e.animationName} animation`)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <main id=\"box\" className=\"text-center vertical-center text-white\" style={{backgroundImage: `url(${backgroundImageUrl})`}}>\r\n            <div id=\"overlay\" className=\"text-center display-2\">Japan Spirit</div>\r\n            <Container fluid style={{ maxWidth: \"600px\" }}>\r\n\r\n                <article className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 lang=\"ja-jp\" className=\"p-1 display-1\">{hieroglyphEntry ? hieroglyphEntry.kanji : \"...\"}</h1>\r\n                                <h2 id=\"hint\" style={{ opacity: \"0\" }} className=\"p-1 mb-5\">{hieroglyphEntry ? hieroglyphEntry.heisig_en : \"...\"}</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <button className=\"btn btn-lg btn-secondary btn-block mb-2\" onClick={showHint}>Show hint</button>\r\n                            </Col>\r\n                            <Col>\r\n                                <button className=\"btn btn-lg btn-secondary btn-block mb-2\" onClick={() => {\r\n                                    loadingWrapper()\r\n                                    // loadNewHieroglyphEntry()\r\n                                    // loadNewBackgroundImage()\r\n                                }}>Another hieroglyph</button>\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </article>\r\n\r\n            </Container>\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default HieroglyphBox","export function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}","import React from 'react'\r\nimport HieroglyphBox from './HieroglyphBox'\r\n\r\nconst App = () => {\r\n    return (\r\n        <HieroglyphBox />\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}