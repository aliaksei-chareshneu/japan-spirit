{"version":3,"sources":["components/MusicPlayer.js","components/HieroglyphBox.js","general-functions.js","components/App.js","index.js"],"names":["MusicPlayer","props","url","useState","isPlaying","setIsPlaying","Audio","audio","useEffect","console","log","playPromise","play","undefined","then","_","catch","error","pause","addEventListener","removeEventListener","useAudio","toggleIsPlaying","Button","onClick","variant","size","block","HieroglyphBox","hieroglyphEntry","setHieroglyphEntry","backgroundImageUrl","setBackgroundImageUrl","loadNewHieroglyphEntry","Promise","resolve","fetch","r","json","data","min","max","length","Math","ceil","floor","random","loadNewBackgroundImage","loadingWrapper","all","overlay","document","getElementById","onAnimationEndCallback","classList","remove","add","values","style","opacity","querySelectorAll","forEach","b","blur","onanimationstart","e","animationName","onanimationend","id","className","backgroundImage","Container","fluid","maxWidth","Row","Col","lang","kanji","heisig_en","sm","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.4622a350.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst useAudio = (url) => {\r\n    const [isPlaying, setIsPlaying] = useState(false)\r\n    const [audio] = useState(new Audio(url))\r\n\r\n    const toggleIsPlaying = () => {\r\n        console.log(\"Before toggle\", isPlaying)\r\n        setIsPlaying(!isPlaying)\r\n        console.log(\"After toggle\", isPlaying)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (isPlaying) {\r\n            console.log(isPlaying)\r\n            const playPromise = audio.play();\r\n            console.log(url)\r\n            if (playPromise !== undefined) {\r\n                playPromise\r\n                    .then(_ => {\r\n                        // Automatic playback started!\r\n                        // Show playing UI.\r\n                        console.log(\"audio played auto\");\r\n                    })\r\n                    .catch(error => {\r\n                        // Auto-play was prevented\r\n                        // Show paused UI.\r\n                        console.log(\"playback prevented\");\r\n                        console.log(error)\r\n                    });\r\n            }\r\n        } else {\r\n            audio.pause()\r\n        }\r\n    }, [isPlaying])\r\n\r\n    useEffect(() => {\r\n        audio.addEventListener('ended', () => setIsPlaying(false))\r\n        return () => {\r\n            audio.removeEventListener('ended', () => setIsPlaying(false))\r\n        }\r\n    }, [])\r\n\r\n    return [isPlaying, toggleIsPlaying]\r\n}\r\n\r\n// destructuring needed ?\r\nconst MusicPlayer = (props) => {\r\n    const [isPlaying, toggleIsPlaying] = useAudio(props.url)\r\n\r\n    return (\r\n        <Button onClick={toggleIsPlaying} variant=\"secondary\" size=\"lg\" block>{isPlaying ? \"Pause music\" : \"Play music\"}</Button>\r\n    )\r\n}\r\n\r\nexport default MusicPlayer","import React, { useState, useEffect } from 'react'\r\nimport { getRandomInt } from '../general-functions'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\nimport MusicPlayer from './MusicPlayer'\r\n// import dict from '../../node_modules/japanese-json/kana.json'\r\n\r\nconst HieroglyphBox = () => {\r\n    const [hieroglyphEntry, setHieroglyphEntry] = useState(null)\r\n    const [backgroundImageUrl, setBackgroundImageUrl] = useState(null)\r\n    // const [tempHieroglyph, setTempHieroglyph] = useState(null)\r\n\r\n    const showHint = () => {\r\n        document.getElementById(\"hint\").style.opacity = \"1\"\r\n    }\r\n\r\n    const hideHint = () => {\r\n        document.getElementById(\"hint\").style.opacity = \"0\"\r\n    }\r\n\r\n    const blurButtons = () => {\r\n        [...document.querySelectorAll('button')].forEach(b => b.blur())\r\n    }\r\n\r\n    const fadeInAnimation = () => {\r\n        return new Promise((resolve) => {\r\n            const overlay = document.getElementById(\"overlay\");\r\n            const onAnimationEndCallback = () => {\r\n                overlay.removeEventListener('animationend', onAnimationEndCallback);\r\n                resolve(\"Animation ended, callback function removed\");\r\n            }\r\n\r\n            overlay.addEventListener('animationend', onAnimationEndCallback)\r\n            overlay.classList.remove(\"fadeout\")\r\n            overlay.classList.add(\"fadein\")\r\n        })\r\n    }\r\n\r\n    const loadNewHieroglyphEntry = () => {\r\n        return new Promise((resolve) => {\r\n            console.log(\"Hieroglyph is being fetched...\")\r\n            fetch(\"https://kanjiapi.dev/v1/kanji/grade-1\")\r\n                .then(r => r.json())\r\n                .then(data => {\r\n                    fetch(\"https://kanjiapi.dev/v1/kanji/\" + data[getRandomInt(1, data.length)])\r\n                        .then(r => r.json())\r\n                        .then(data => {\r\n                            // setTempHieroglyph(data)\r\n                            console.log(data)\r\n                            resolve(data)\r\n                        })\r\n                })\r\n        })\r\n    }\r\n\r\n    const loadNewBackgroundImage = () => {\r\n        return new Promise((resolve) => {\r\n            console.log(\"Image is being fetched...\")\r\n            fetch(\"https://source.unsplash.com/collection/1252289\")\r\n                .then(r => {\r\n                    // setBackgroundImageUrl(r.url)\r\n                    console.log(r.url)\r\n                    resolve(r.url)\r\n                })\r\n        }) \r\n    }\r\n\r\n    const loadingWrapper = () => {\r\n        // return Promise.all or just Promise.all?\r\n        return Promise.all([fadeInAnimation(), loadNewHieroglyphEntry(), loadNewBackgroundImage()]).then((values) => {\r\n            hideHint()\r\n            blurButtons()\r\n            console.log(values);\r\n            setHieroglyphEntry(values[1])\r\n            setBackgroundImageUrl(values[2])\r\n            document.getElementById(\"overlay\").classList.remove(\"fadein\")\r\n            document.getElementById(\"overlay\").classList.add(\"fadeout\")\r\n        })\r\n    }\r\n\r\n    useEffect(() => {\r\n        Promise.all([loadNewHieroglyphEntry(), loadNewBackgroundImage()]).then((values) => {\r\n            console.log(values)\r\n            setHieroglyphEntry(values[0])\r\n            setBackgroundImageUrl(values[1])\r\n            document.getElementById(\"overlay\").classList.remove(\"fadein\")\r\n            document.getElementById(\"overlay\").classList.add(\"fadeout\")\r\n        })\r\n\r\n        // loadingWrapper()\r\n\r\n        // loadNewHieroglyphEntry()\r\n        // loadNewBackgroundImage()\r\n\r\n        const overlay = document.getElementById(\"overlay\")\r\n        overlay.onanimationstart = (e) => {\r\n            console.log(`Start of ${e.animationName} animation`)\r\n            // return new Promise(resolve => resolve(`Start of ${e.animationName} animation`))\r\n        }\r\n\r\n        overlay.onanimationend = (e) => {\r\n            // return new Promise(resolve => resolve(`End of ${e.animationName} animation`))\r\n            console.log(`End of ${e.animationName} animation`)\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <main id=\"box\" className=\"text-center center-all text-white\" style={{backgroundImage: `url(${backgroundImageUrl})`}}>\r\n            <div id=\"overlay\" className=\"text-center center-all japan-spirit display-4\"><p>japan<br />   spirit</p></div>\r\n            <Container fluid style={{ maxWidth: \"700px\" }}>\r\n\r\n                <article className=\"card\">\r\n                    <div className=\"card-body\">\r\n                        <Row>\r\n                            <Col>\r\n                                <h1 lang=\"ja-jp\" className=\"p-1 display-1\">{hieroglyphEntry ? hieroglyphEntry.kanji : \"...\"}</h1>\r\n                                <h2 id=\"hint\" style={{ opacity: \"0\" }} className=\"p-1 mb-5\">{hieroglyphEntry ? hieroglyphEntry.heisig_en : \"...\"}</h2>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col sm={4}>\r\n                                <button className=\"btn btn-lg btn-secondary btn-block mb-2\" onClick={showHint}>Show hint</button>\r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                <button className=\"btn btn-lg btn-secondary btn-block mb-2\" onClick={() => {\r\n                                    loadingWrapper()\r\n                                    // loadNewHieroglyphEntry()\r\n                                    // loadNewBackgroundImage()\r\n                                }}>New hieroglyph</button>\r\n                            </Col>\r\n                            <Col sm={4}>\r\n                                {/* <MusicPlayer url={`${process.env.PUBLIC_URL}/calm.mp3`}/> */}\r\n                                <MusicPlayer url=\"https://upload.wikimedia.org/wikipedia/commons/transcoded/a/a3/Kimi_ga_Yo_instrumental.ogg/Kimi_ga_Yo_instrumental.ogg.mp3\" />\r\n                            </Col>\r\n                        </Row>\r\n                    </div>\r\n                </article>\r\n\r\n            </Container>\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default HieroglyphBox","export function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}","import React from 'react'\r\nimport HieroglyphBox from './HieroglyphBox'\r\n\r\nconst App = () => {\r\n    return (\r\n        <HieroglyphBox />\r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}