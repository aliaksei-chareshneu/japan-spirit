{"version":3,"sources":["components/QuoteBox.js","general-functions.js","components/App.js","index.js"],"names":["QuoteBox","useState","hieroglyph","setHieroglyph","useEffect","fetch","then","response","json","data","min","max","randomInt","length","Math","ceil","floor","random","console","log","id","className","Container","fluid","style","maxWidth","Row","Col","lang","kanji","opacity","heisig_en","onClick","document","getElementById","window","location","reload","App","ReactDOM","render"],"mappings":"sNAaA,IAwGeA,EAxGE,WAAM,MAKiBC,mBAAS,MAL1B,mBAKZC,EALY,KAKAC,EALA,KA2EnB,OA1DAC,qBAAU,WACNC,MAAM,yCACDC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACF,IClCaC,EAAKC,EDkCZC,GClCOF,EDkCkB,EClCbC,EDkCgBF,EAAKI,OCjCnDH,EAAMI,KAAKC,KAAKL,GAChBC,EAAMG,KAAKE,MAAML,GACVG,KAAKE,MAAMF,KAAKG,UAAYN,EAAMD,IAAQA,GDgCrCL,MAAM,iCAAmCI,EAAKG,IACzCN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACFN,EAAcM,GACdS,QAAQC,IAAIV,WAS7B,IA0CC,0BAAMW,GAAG,MAAMC,UAAU,0CACrB,kBAACC,EAAA,EAAD,CAAWC,OAAK,EAACC,MAAO,CAAEC,SAAU,UAChC,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACA,6BAASN,UAAU,QACf,yBAAKA,UAAU,aAEf,wBAAIO,KAAK,QAAQP,UAAU,OAAOnB,EAAaA,EAAW2B,MAAQ,yEAClE,wBAAIT,GAAG,OAAOI,MAAO,CAACM,QAAS,KAAMT,UAAU,OAAOnB,EAAaA,EAAW6B,UAAY,yEAG1F,4BAAQV,UAAU,qCAAqCW,QAAS,WAC5DC,SAASC,eAAe,QAAQV,MAAMM,QAAU,MADpD,2DAGA,4BAAQT,UAAU,gCAAgCW,QAAS,WACvDG,OAAOC,SAASC,WADpB,2FE7FTC,EARH,WACR,OAEQ,kBAAC,EAAD,O,YCAZC,IAASC,OACL,kBAAC,EAAD,MACAP,SAASC,eAAe,U","file":"static/js/main.9d2c305b.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { getRandomInt } from '../general-functions'\r\nimport { Container, Row, Col, Button } from 'react-bootstrap'\r\n// import dict from '../../node_modules/japanese-json/kana.json'\r\n// import QuoteText from './QuoteText'\r\n// import QuoteAuthor from './QuoteAuthor'\r\n\r\nfunction getRandomDictKey(dict) {\r\n    const keys = Object.keys(dict);\r\n    const length = keys.length;\r\n    return keys[Math.floor(Math.random() * length)];\r\n}\r\n\r\nconst QuoteBox = () => {\r\n    // const [randomInt, setRandomInt] = useState(1)\r\n    // const [hieroglyphs, setHieroglyphs] = useState(null)\r\n    // const [hieroglyphMeaning, setHieroglyphMeaning] = useState(null)\r\n\r\n    const [hieroglyph, setHieroglyph] = useState(null)\r\n    // let dict\r\n    // let randomInt; \r\n    // fetch(\"https://kanjiapi.dev/v1/kanji/grade-1\")\r\n    //     .then(response => response.json())\r\n    //     .then(data => {\r\n    //         randomInt = getRandomInt(1, data.length)\r\n    //         setHieroglyph(data[randomInt])\r\n    //     })\r\n    // const length = data.count + 1;\r\n    // const randomHieroglyph = data[getRandomInt(1, length)];\r\n\r\n    useEffect(() => {\r\n        fetch(\"https://kanjiapi.dev/v1/kanji/grade-1\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                const randomInt = getRandomInt(1, data.length)\r\n                fetch(\"https://kanjiapi.dev/v1/kanji/\" + data[randomInt])\r\n                    .then(response => response.json())\r\n                    .then(data => {\r\n                        setHieroglyph(data)\r\n                        console.log(data)\r\n                    })\r\n            })\r\n\r\n\r\n        // fetch(\"https://kanjiapi.dev/v1/kanji/\" + hieroglyph)\r\n        // .then(response => response.json())\r\n        // .then(data => {\r\n\r\n    }, [])\r\n\r\n\r\n    // useEffect(() => {\r\n\r\n    //     fetch(\"https://kanjiapi.dev/v1/kanji/grade-1\")\r\n    //         .then(response => response.json())\r\n    //         .then(data => {\r\n    //             // const length = data.count + 1;\r\n    //             // const randomHieroglyph = data[getRandomInt(1, length)];\r\n    //             setHieroglyphs(data)\r\n    //             console.log(data);\r\n    //             setRandomInt(getRandomInt(0, data.length))\r\n\r\n    //             fetch(\"https://kanjiapi.dev/v1/kanji/\" + data[randomInt])\r\n    //                 .then(response => response.json())\r\n    //                 .then(data => {\r\n    //                     setHieroglyphMeaning(data)\r\n    //                     console.log(data)\r\n    //                 })\r\n    //         })\r\n    //         // .then(() => {\r\n\r\n    //         // })    \r\n\r\n    // }, [])\r\n\r\n    // const proxyUrl = 'https://cors-anywhere.herokuapp.com/';\r\n    // fetch(proxyUrl + 'https://kanjiapi.dev/v1/kanji/grade-1')\r\n    //     .then(response => response.json())\r\n    //     .then(data => {\r\n    //         const length = data.count + 1;\r\n    //         const randomHieroglyph = data[getRandomInt(1, length)];\r\n    //         setHieroglyph(randomHieroglyph)\r\n    //     })\r\n\r\n\r\n\r\n    // const firstRandom =\r\n\r\n    return (\r\n        // <div>123</div>\r\n        <main id=\"box\" className=\"text-center vertical-center text-white\">\r\n            <Container fluid style={{ maxWidth: \"700px\" }}>\r\n                <Row>\r\n                    <Col>\r\n                    <article className=\"card\">\r\n                        <div className=\"card-body\">\r\n                        {/* <h1 lang=\"ja-jp\">{dict[getRandomDictKey(dict)][\"a\"][\"Seion\"][\"Hiragana\"]}</h1> */}\r\n                        <h1 lang=\"ja-jp\" className=\"p-1\">{hieroglyph ? hieroglyph.kanji : \"Загружается...\"}</h1>\r\n                        <h2 id=\"hint\" style={{opacity: \"0\"}} className=\"p-1\">{hieroglyph ? hieroglyph.heisig_en : \"Загружается...\"}</h2>\r\n                        {/* <blockquote>{quotes ? quotes[randomInt].text : \"Fetching random quote ...\"}</blockquote>\r\n            <div>{quotes ? quotes[randomInt].author : \"Fetching random quote author ...\"}</div>*/}\r\n                        <button className=\"mt-5 btn btn-lg btn-secondary mr-2\" onClick={() => {\r\n                            document.getElementById(\"hint\").style.opacity = \"1\"\r\n                        }}>Подсказка?</button>\r\n                        <button className=\"mt-5 btn btn-lg btn-secondary\" onClick={() => {\r\n                            window.location.reload()\r\n                        }}>Новый иероглиф?</button>\r\n                        </div>\r\n                    </article>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default QuoteBox","export function getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min)) + min; //The maximum is exclusive and the minimum is inclusive\r\n}","import React from 'react'\r\nimport QuoteBox from './QuoteBox'\r\n\r\nconst App = () => {\r\n    return (\r\n        \r\n            <QuoteBox />\r\n        \r\n    )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './components/App'\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './index.css'\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}